{% extends '/base.html.twig' %}

{% block title %}
    Infaux
{% endblock %}
{% block gtag %}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-107718823-2"></script>
    <script>
        window.dataLayer = window.dataLayer || [];

        function gtag() {
            dataLayer.push(arguments);
        }

        gtag('js', new Date());

        gtag('config', 'UA-107718823-2');
    </script>
{% endblock %}
{% block meta_description %}
    <meta name="description"
          content="Agence web à Lens. Conception et développement de sites sur mesure. Communication digitale, référencement SEO Google."/>{% endblock %}
{% block meta_keywords %}
    <meta name="keywords"
          content="Agence web de communication web marketing, stratégie digitale à Lens, France, creation site internet, agence de développement web, Création site internet, Lens, Lille, France, creation site internet, 59, 62, Nord Pas de Calais, Nord, Haut de France, création site internet vitrine, community management entreprise, community management personnel, création boutique en ligne, site internet, site web, création site internet boutique en ligne, Création site web, 75, Paris, Création site web e commerce, agence de référencement, agence seo, seo, référencement naturel, web marketing, agence web, agence de communication, vidéo promotionnelle, vidéo commercial, création site catalogue, création site internet responsive, généré du trafic sur mon site internet, première page google, référencement google, création de site internet france, conseil et webdesign, référencement internet, agence web, site internet responsive, site responsive, création et optimisation de site web, web design et développement de site internet, communication digitale, webmarketing, création site internet boutique en ligne, boutique en ligne, créer boutique en ligne, refonte boutique en ligne, refonte site internet e-commerce, responsive web design, refonte site internet responsive, site adaptable, site internet, site web, création site internet, création site web, responsive, création site internet e-commerce"/>{% endblock %}
{% block meta_robots %}
    <meta name="robots" content="unavailable_after: [date ]">{% endblock %}
{% block google %}
    <meta name="google" content="unavailable_after: [date ]">{% endblock %}

{% block style_custom %}

    <style>

    </style>
{% endblock %}
{% block body %}

    {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    <div class="container" style="margin-top: 100px;">


        {% if app.user %}
            <div class="formPost input-submit-post" >
                <form onsubmit="handleAddPost(event)" name="post" data-action="{{ path('post.add') }}"
                      class="postForm" id="postForm">
                        <div class="div_img">
                            <div class="img"
                                    {% if app.user.image  is defined %}
                                style="background:url('{{ vich_uploader_asset(app.user, 'imageFile') }}')">
                                {% else %}
                                    style="background:url('{{ ("https://api.adorable.io/avatars/285/anonyme" ~ random(50, 100) ~"@adorable.io.png") }}')">
                                {% endif %}
                            </div>
                        </div>
                    <div class="form-group">
                        <div class="form-group"><label for="post_text" class="required"> </label>
                            <textarea
                                    id="post_text" name="post[text]" required="required"
                                    class="postForm__textarea form-control input-lg txta txtstuff"
                                    placeholder="Poster un nouveau post" onfocus="affiche()"
                                    onblur="afficheplus()"></textarea></div>
                    </div>
                    <div class="d-flex justify-content-end btn-submit">
                        <div class="form-group">
                            <div class="form-group formBtn">
                                <button type="submit" id="post_submit" name="post[submit]" class="formPost btn"
                                        disabled="" style="opacity: 0;">Poster
                                </button>
                            </div>

                        </div>
                    </div>
                    <input type="hidden" id="post__token" name="post[_token]"
                           value="vOiGqd8IwjvzoMt_Rwkxd8pbQLVFo6BEIE8w7zAAxLo"></form>
                <input type="hidden" id="post__token" name="post_token" value="{{ csrf_token('add_post') }}"></form>
            </div>


            {#
             <div class="formPost">
                 {{ form_start(postForm,{'attr':{'class':'postForm'}}) }}
                 <div class="img"
                         {% if app.user.image  is defined %}
                      style="background:url('{{ vich_uploader_asset(app.user, 'imageFile') }}')">
                     {% else %}
                         style="background:url('{{ ("https://api.adorable.io/avatars/285/anonyme" ~ random(50, 100) ~"@adorable.io.png") }}')">
                     {% endif %}

                 </div>
                 <div class="form-group">
                     {{ form_row(postForm.text,{'attr':{'class':'postForm__textarea form-control input-lg txta','placeholder':'Poster un nouveau post', 'onfocus':'affiche()', 'onblur':'afficheplus()'},'label': ' '}) }}
                 </div>
                 <div class="d-flex justify-content-end btn-submit">
                     <div class="form-group">

                         {{ form_row(postForm.submit,{'attr':{'class': 'formPost', 'disabled':'true'},'label': 'Poster'}) }}

                     </div>
                 </div>
                 {{ form_end(postForm) }}
             </div>
             #}

        {% endif %}



        {% for post in posts %}

            {% set onlyOneComment = post.comments | commentMostLike %}
            {% set comments = post.comments | commentMostLike %}

            {{ include('/posts/only-post.html.twig') }}

        {% endfor %}
        {{ knp_pagination_render(posts) }}

    </div>

    <div class="page-load-status">
        <div class="infinite-scroll-request">
            <div class="loader-ellips">Chargement
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
                <span class="loader-ellips__dot"></span>
            </div>
        </div>
        <p class="infinite-scroll-last">Plus aucun post a afficher</p>
        <p class="infinite-scroll-error">No more pages to load</p>
    </div>
{% endblock %}


  {% block javascripts %}
      <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
      <script src="https://unpkg.com/infinite-scroll@3/dist/infinite-scroll.pkgd.min.js"></script>
      {{ encore_entry_script_tags('ajax') }}

      <script>

          //fonction d'affichage du bouton submit (form post)
          function affiche() {
              document.getElementById('post_submit').style.opacity = 1;
              document.getElementById('post_submit').disabled = "";
              $('#postForm').addClass('selected');
              //document.getElementById('postForm').style.align-item= 'red';
          }

          function afficheplus() {
              const str = document.getElementById('post_text').value;
              console.log(str.length);
              if (str.length == 0) {
                  document.getElementById('post_submit').style.opacity = 0;
                  document.getElementById('post_submit').disabled = "true";
                    $('#postForm').removeClass('selected');

              }
          }


          document.addEventListener("DOMContentLoaded", function (event) {


              //Post infinite scroll
              var infiniteScroll = $('.transition-fade .container ').infiniteScroll({
                  // options
                  path: '.next a',
                  append: '.post-container',
                  history: false,
                  elementScroll: false,
                  hideNav: '.pagination',
                  status: '.page-load-status'
              });
              infiniteScroll.on('load.infiniteScroll', function () {
                  $(function () {
                      moment.locale('fr');
                      $(".p-date").map((x, i) => {
                          i.innerText = moment.unix(i.dataset.createdat).local().fromNow();
                      });
                  });
              });


          });

      </script>


      <script>
          // Targets all textareas with class "txta"
          let textareas = document.querySelectorAll('.txta'),
              hiddenDiv = document.createElement('div'),
              content = null;

          // Adds a class to all textareas
          for (let j of textareas) {
              j.classList.add('txtstuff');
          }

          // Build the hidden div's attributes

          // The line below is needed if you move the style lines to CSS
          // hiddenDiv.classList.add('hiddendiv');

          // Add the "txta" styles, which are common to both textarea and hiddendiv
          // If you want, you can remove those from CSS and add them via JS
          hiddenDiv.classList.add('txta');

          // Add the styles for the hidden div
          // These can be in the CSS, just remove these three lines and uncomment the CSS
          hiddenDiv.style.display = 'none';
          hiddenDiv.style.whiteSpace = 'pre-wrap';
          hiddenDiv.style.wordWrap = 'break-word';

          // Loop through all the textareas and add the event listener
          for (let i of textareas) {
              (function (i) {
                  // Note: Use 'keyup' instead of 'input'
                  // if you want older IE support
                  i.addEventListener('input', function () {

                      // Append hiddendiv to parent of textarea, so the size is correct
                      i.parentNode.appendChild(hiddenDiv);

                      // Remove this if you want the user to be able to resize it in modern browsers
                      i.style.resize = 'none';

                      // This removes scrollbars
                      i.style.overflow = 'hidden';

                      // Every input/change, grab the content
                      content = i.value;

                      // Add the same content to the hidden div

                      // This is for old IE
                      content = content.replace(/\n/g, '<br>');

                      // The <br ..> part is for old IE
                      // This also fixes the jumpy way the textarea grows if line-height isn't included
                      hiddenDiv.innerHTML = content + '<br style="line-height: 3px;">';

                      // Briefly make the hidden div block but invisible
                      // This is in order to read the height
                      hiddenDiv.style.visibility = 'hidden';
                      hiddenDiv.style.display = 'block';
                      i.style.height = hiddenDiv.offsetHeight + 'px';

                      // Make the hidden div display:none again
                      hiddenDiv.style.visibility = 'visible';
                      hiddenDiv.style.display = 'none';
                  });
              })(i);
          }
      </script>

  {% endblock %}
